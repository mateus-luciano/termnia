name: Build Termnia

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25.0"

      - name: Install deps (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y build-essential xorg-dev libgl1-mesa-dev pkg-config

      - name: Install deps (macOS only)
        if: runner.os == 'macOS'
        run: |
          brew install pkg-config

      - name: Install deps (Windows only)
        if: runner.os == 'Windows'
        run: |
          choco install mingw -y

      - name: Build binaries
        run: |
          mkdir -p bin
          case "${{ runner.os }}" in
            Linux)
              GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o bin/termnia-linux-amd64 ./cmd/termnia
              ;;
            Windows)
              set GOOS=windows
              set GOARCH=amd64
              go build -ldflags "-H windowsgui -s -w" -o bin/termnia-windows-amd64.exe ./cmd/termnia
              ;;
            macOS)
              GOOS=darwin GOARCH=arm64 go build -ldflags "-s -w" -o bin/termnia-darwin-arm64 ./cmd/termnia
              ;;
          esac

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: termnia-${{ runner.os }}
          path: bin/*
